{"version":3,"sources":["backbone-metal.js"],"names":[],"mappings":"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","file":"backbone-metal.js","sourcesContent":["import _ from 'lodash';\nimport Backbone from 'backbone';\n\n/**\n * @module Metal\n */\nvar Metal = Backbone.Metal = {};\n\n/**\n * Wraps the passed method so that `this._super` will point to the superMethod\n * when the method is invoked.\n *\n * @private\n * @method wrap\n * @param {Function} method - The method to call.\n * @param {Function} superMeqthod - The super method.\n * @return {Function} - wrapped function.\n */\nfunction _wrap(method, superMethod) {\n  return function() {\n    var prevSuper = this._super;\n    this._super = superMethod;\n    var ret = method.apply(this, arguments);\n    this._super = prevSuper;\n    return ret;\n  };\n}\n\n/**\n * A reference to safe regex for checking if a function calls `_super`.\n *\n * @private\n * @const {RegExp}\n */\nconst CONTAINS_SUPER = (/xyz/.test(new Function('xyz'))) ? /\\b_super\\b/ : /.*/;\n\n/**\n * Assigns properties of source object to destination object, wrapping methods\n * that call their super method.\n *\n * @private\n * @method wrapAll\n * @param {Object} dest - The destination object.\n * @param {Object} source - The source object.\n */\nfunction _wrapAll(dest, source) {\n  var keys = _.keys(source),\n      length = keys.length,\n      i, name, method, superMethod, hasSuper;\n\n  for (i = 0; i < length; i++) {\n    name = keys[i];\n    method = source[name];\n    superMethod = dest[name];\n\n    // Test if new method calls `_super`\n    hasSuper = CONTAINS_SUPER.test(method);\n\n    // Only wrap the new method if the original method was a function and the\n    // new method calls `_super`.\n    if (hasSuper && _.isFunction(method) && _.isFunction(superMethod)) {\n      dest[name] = _wrap(method, superMethod);\n\n    // Otherwise just add the new method or property to the object.\n    } else {\n      dest[name] = method;\n    }\n  }\n}\n\n/**\n * Creates a new Class.\n *\n * ```js\n * var MyClass = Class.extend({\n *   initialize() {\n *     console.log('Created!');\n *   }\n * });\n *\n * new MyClass();\n * // >> Created!\n * ```\n *\n * @public\n * @class Class\n * @memberOf Metal\n * @memberOf Backbone\n */\nvar Class = Metal.Class = function() {\n  this.initialize(...arguments);\n};\n\n/**\n * An overridable method called when objects are instantiated. Does not do\n * anything by default.\n *\n * @public\n * @abstract\n * @method initialize\n */\nClass.prototype.initialize = _.noop;\n\n_.extend(Class, {\n\n  /**\n   * Creates a new subclass.\n   *\n   * ```js\n   * var MyClass = Class.extend({\n   *   // ...\n   * });\n   *\n   * var myClass = new MyClass();\n   * myClass instanceof MyClass\n   * // true\n   * myClass instanceof Class\n   * // true\n   * ```\n   *\n   * @public\n   * @static\n   * @method extend\n   * @param {Object} [protoProps] - The properties to be added to the prototype.\n   * @param {Object} [staticProps] - The properties to be added to the constructor.\n   */\n  extend(protoProps, staticProps) {\n    var Parent = this;\n    var Child;\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent's constructor.\n    if (!protoProps || !_.has(protoProps, 'constructor')) {\n      Child = function() { Parent.apply(this, arguments); };\n    } else if (CONTAINS_SUPER.test(protoProps.constructor)) {\n      Child = _wrap(protoProps.constructor, Parent.prototype.constructor);\n    } else {\n      Child = protoProps.constructor;\n    }\n\n    // Add static properties to the constructor function, if supplied.\n    _.extend(Child, Parent);\n    if (staticProps) {\n      _wrapAll(Child, staticProps);\n    }\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function.\n    var Surrogate = function() { this.constructor = Child; };\n    Surrogate.prototype = Parent.prototype;\n    Child.prototype = new Surrogate();\n\n    // Add prototype properties (instance properties) to the subclass,\n    // if supplied.\n    if (protoProps) {\n      _wrapAll(Child.prototype, protoProps);\n    }\n\n    // Set a convenience property in case the parent class is needed later.\n    Child.superclass = Parent;\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    Child.__super__ = Parent.prototype;\n\n    return Child;\n  },\n\n  /**\n   * Mixes properties onto the class's prototype.\n   *\n   * ```js\n   * var MyMixin = new Mixin({\n   *   alert() {\n   *     console.log('Alert!');\n   *   }\n   * });\n   *\n   * var MyClass = Class.extend({\n   *   initialize() {\n   *     this.alert();\n   *   }\n   * });\n   *\n   * MyClass.mixin(MyMixin);\n   *\n   * new MyClass();\n   * // >> Alert!\n   * ```\n   *\n   * @public\n   * @static\n   * @method mixin\n   * @param {Object} protoProps - The properties to be added to the prototype.\n   * @return {Class} - The class.\n   */\n  mixin(protoProps) {\n    // Add prototype properties (instance properties) to the class, if supplied.\n    _wrapAll(this.prototype, protoProps);\n    return this;\n  },\n\n  /**\n   * Mixes properties onto the class's constructor.\n   *\n   * ```js\n   * var MyMixin = new Mixin({\n   *   alert() {\n   *     console.log('Alert!');\n   *   }\n   * });\n   *\n   * var MyClass = Class.extend(...);\n   *\n   * MyClass.include(MyMixin);\n   *\n   * MyClass.alert();\n   * // >> Alert!\n   * ```\n   *\n   * You can also simply pass a plain javascript object.\n   *\n   * ```js\n   * var MyClass = Class.extend(...);\n   *\n   * MyClass.include({\n   *   alert() {\n   *     console.log('Alert!');\n   *   }\n   * });\n   *\n   * MyClass.alert();\n   * // >> Alert!\n   * ```\n   *\n   * @public\n   * @static\n   * @method mixin\n   * @param {Object} staticProps - The properties to be added to the constructor.\n   * @return {Class} - The class.\n   */\n  include(staticProps) {\n    // Add static properties to the constructor function, if supplied.\n    _wrapAll(this, staticProps);\n    return this;\n  },\n\n  /**\n   * Checks if `value` is a Metal Class.\n   *\n   * ```js\n   * _.isClass(Class.extend(...));\n   * // >> true\n   * _.isClass(new Class());\n   * // >> true\n   * _.isClass(function() {...});\n   * // >> false\n   * _.isClass({...});\n   * // >> false\n   * ```\n   * @public\n   * @method isClass\n   * @memberOf _\n   * @param {*} value - The value to check.\n   */\n  isClass(value) {\n    return !!value && (\n      value instanceof Class ||\n      value.prototype instanceof Class ||\n      value === Class\n    );\n  }\n});\n\n/**\n * Allows you to create mixins, whose properties can be added to other classes.\n *\n * @public\n * @class Mixin\n * @memberOf Metal\n * @memberOf Backbone\n * @param {Object} protoProps - The properties to be added to the prototype.\n */\nvar Mixin = Metal.Mixin = function(protoProps) {\n  // Add prototype properties (instance properties) to the class, if supplied.\n  _.extend(this, protoProps);\n};\n\n/**\n * Checks if `value` is a Metal Mixin.\n *\n * ```js\n * _.isMixin(new Mixin());\n * // >> true\n * _.isMixin({});\n * // >> false\n * _.isMixin(function() {...});\n * // >> false\n * _.isMixin(new Class());\n * // >> false\n * ```\n *\n * @public\n * @method isMixin\n * @memberOf _\n * @param {*} value - The value to check.\n */\nMixin.isMixin = function(value) {\n  return !!value && value instanceof Mixin;\n};\n\n/**\n * @private\n * @const {String[]}\n */\nconst ERROR_PROPS = [\n  'description', 'fileName', 'lineNumber', 'name', 'message', 'number'\n];\n\n/**\n * A subclass of the JavaScript Error.\n *\n * ```js\n * throw new Metal.Error('Oh you\\'ve really done it now...');\n * // Uncaught Metal.Error: Oh you've really done it now...\n * //   [stack trace]\n * ```\n *\n * @class Error\n * @memberOf Metal\n * @extends Error\n * @uses Metal.Class\n */\nvar Err = Metal.Error = Class.extend.call(Error, {\n\n  /**\n   * @public\n   * @constructs Error\n   * @param {String} [message] - A description of the error.\n   * @param {Object} [options] - Settings for the error.\n   * @param {String} [options.message] - A description of the error.\n   */\n  constructor(message, options = {}) {\n    // If options are provided in place of a message, assume message exists on\n    // options.\n    if (_.isObject(message)) {\n      options = message;\n      message = options.message;\n    }\n\n    // Create a fake error with message in order to capture a stack trace.\n    var error = Error.call(this, message);\n\n    // Copy over all the error-related properties.\n    _.extend(this, _.pick(error, ERROR_PROPS), _.pick(options, ERROR_PROPS));\n\n    // Adds a `stack` property to the given error object that will yield the\n    // stack trace at the time captureStackTrace was called.\n    // When collecting the stack trace all frames above the topmost call\n    // to this function, including that call, will be left out of the\n    // stack trace.\n    // This is useful because we can hide Metal implementation details\n    // that are not very helpful for the user.\n    Err.captureStackTrace(this, Err);\n  },\n\n  /**\n   * Formats the error message to display in the console.\n   *\n   * @public\n   * @method toString\n   * @returns {String} - Formatted error message.\n   */\n  toString() {\n    return `${this.name}: ${this.message}`;\n  }\n}, {\n\n  /**\n   * A safe reference to V8's `Error.captureStackTrace`.\n   *\n   * @public\n   * @method captureStackTrace\n   */\n  captureStackTrace(target, method) {\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(target, method);\n    }\n  }\n});\n\n/**\n * @class Error\n * @mixes Class\n */\n_.extend(Err, Class);\n\n/**\n * Display a deprecation warning with the provided message.\n *\n * @public\n * @method deprecate\n * @param {String|Object} message - A description of the deprecation.\n * @param {String} message.prev - The deprecated item.\n * @param {String} message.next - The replacement for the deprecated item.\n * @param {Boolean} [test] - An optional boolean. If falsy, the deprecation will be displayed.\n */\nvar deprecate = Metal.deprecate = function(message, test) {\n\n  // Returns if test is provided and is falsy.\n  if (test !== undefined && test) {\n    return;\n  }\n\n  // If message is provided as an object, format the object into a string.\n  if (_.isObject(message)) {\n    message = deprecate._format(message.prev, message.next);\n  }\n\n  // Ensure that message is a string\n  message = message && message.toString();\n\n  // If deprecation message has not already been warned, send the warning.\n  if (!deprecate._cache[message]) {\n    deprecate._warn(`Deprecation warning: ${message}`);\n    deprecate._cache[message] = true;\n  }\n};\n\n/**\n * Format a message for deprecate.\n *\n * @private\n * @method _format\n * @memberOf deprecate\n * @param {String} prev - The deprecated item.\n * @param {String} next - The replacement for the deprecated item.\n * @return {String} - The formatted message.\n */\ndeprecate._format = function(prev, next) {\n  return `${prev} is going to be removed in the future. Please use ${next} instead.`;\n};\n\n/**\n * A safe reference to `console.warn` that will fallback to `console.log` or\n * `_noop` if the `console` object does not exist.\n *\n * @private\n * @method _warn\n * @memberOf deprecate\n * @param {*...} - The values to warn in the console.\n */\ndeprecate._warn = typeof console !== 'undefined' && (console.warn || console.log) || _.noop;\n\n/**\n * An internal cache to avoid sending the same deprecation warning multiple\n * times.\n *\n * @private\n * @property _cache\n * @memberOf deprecate\n */\ndeprecate._cache = {};\n\n/**\n * A `Metal.Mixin` version of `Backbone.Events`.\n *\n * @mixin Events\n * @memberOf Metal\n * @memberOf Backbone\n * @extends Metal.Mixin\n * @mixes Backbone.Events\n */\nvar Events = Metal.Events = new Mixin(Backbone.Events);\n\n/**\n * @class Class\n * @mixes Events\n */\nClass.mixin(Events);\n\nexport default Metal;\n"],"sourceRoot":"/source/"}